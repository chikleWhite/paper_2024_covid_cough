function ds_statistics = extract_statistics(metadata)

% pre-allocation
num_subj = height(metadata);
age = metadata.a;
gender = metadata.g;
ds_statistics = struct; % statistics

% get statistical info:

% No. subjects
ds_statistics.num_subj = num_subj;

% No. positive
ds_statistics.num_pos = ...
    string(sum(metadata.test_status == "p")) + ...
    ' (' + ...
    string(round(sum(metadata.test_status == "p") / num_subj  * 100, 1)) + ...
    '%)';

% No. negative
ds_statistics.num_neg = ...
    string(sum(metadata.test_status == "n")) + ...
    ' (' + ...
    string(round(sum(metadata.test_status == "n") / num_subj  * 100, 1)) + ...
    '%)';

% age mean & std
ds_statistics.age_mean_std = ...
    string(round(mean(age, 'omitnan'), 1)) + ...
    ' ' + char(177) + ' ' + ...
    string(round(std(age, 'omitnan'), 1));

% age mean & std positive
age_pos = age(metadata.test_status == "p");
ds_statistics.age_mean_std_pos = ...
    string(round(mean(age_pos, 'omitnan'), 1)) + ...
    ' ' + char(177) + ' ' + ...
    string(round(std(age_pos, 'omitnan'), 1));

% age mean & std negative
age_neg = age(metadata.test_status == "n");
ds_statistics.age_mean_std_neg = ...
    string(round(mean(age_neg, 'omitnan'), 1)) + ...
    ' ' + char(177) + ' ' + ...
    string(round(std(age_neg, 'omitnan'), 1));

% age range
ds_statistics.age_range = '[' + string(min(age)) + ' ' + string(max(age)) + ']';

% age range positive
ds_statistics.age_range = '[' + string(min(age_pos)) + ' ' + string(max(age_pos)) + ']';

% age range negative
ds_statistics.age_range = '[' + string(min(age_neg)) + ' ' + string(max(age_neg)) + ']';

% No. male
ds_statistics.num_male = ...
    string(sum(gender == "Male" | gender == "male")) + ...
    ' (' + ...
    string(round(sum(gender == "Male" | gender == "male") / num_subj  * 100, 1)) + ...
    '%)';

% No. female
ds_statistics.num_female = ...
    string(sum(gender == "Female" | gender == "female")) + ...
    ' (' + ...
    round(sum(gender == "Female" | gender == "female") / num_subj  * 100, 1) + ...
    '%)';

% male / female ratio positive
gender_pos = gender(metadata.test_status == "p");
ds_statistics.male_female_ratio_pos = ...
    string(round(sum(gender_pos == "Male" | gender_pos == "male") / length(gender_pos) * 100, 1)) + ...
    ' / ' + ...
    round(sum(gender_pos == "Female" | gender_pos == "female") / length(gender_pos) * 100, 1);

% male / female ratio negative
gender_neg = gender(metadata.test_status == "n");
ds_statistics.male_female_ratio_neg = ...
    string(round(sum(gender_neg == "Male" | gender_neg == "male") / length(gender_neg) * 100, 1)) + ...
    ' / ' + ...
    round(sum(gender_neg == "Female" | gender_neg == "female") / length(gender_neg) * 100, 1);

% dispaly statistical info of negative subjects
disp(ds_statistics);

% save in excel file
writetable(struct2table(ds_statistics), 'ds_statistics.xlsx', 'WriteMode', 'overwrite');


end