function win_info = extrct_win_info(win_info)

% set data for windowing

switch nargin()
    case 0 % values not added before function
        win_len = 128;
        overlap_coeff_win = 0.5;
        overlap_coeff_spectrograms = 0.9;
    case 1 % values added before function
        win_len = win_info.win_len;
        overlap_coeff_win = win_info.overlap_coeff_win;
        overlap_coeff_spectrograms = win_info.overlap_coeff_spectrograms;
end

fs = 16e3; % sampling frequency
win = hann(win_len, 'periodic'); % window type
numSamplesOverlapBetweenWin = round(win_len*overlap_coeff_win); % overlap length
numSamplesHopBetweenWin = win_len - numSamplesOverlapBetweenWin; % hop length
fft_len_coeff = 2; % fft length ratio coefficient
fft_len = win_len * fft_len_coeff; % fft length
num_bands = 64; % y axis in spectrogram

% No. spectrums (nx1 vector) per spectrogram (nxm matrix)
numSpectrumsPerSpectrogram = 96;

% No. spectrums that overlap between each 2 spectrograms
numSpectrumsOverlapBetweenSpectrograms = ...
    round(numSpectrumsPerSpectrogram * overlap_coeff_spectrograms);

% No. spectrums that not overlap between each 2 spectrograms
numSpectrumsHopBetweenSpectrograms = ...
    numSpectrumsPerSpectrogram - numSpectrumsOverlapBetweenSpectrograms;

% No. samples per spectrogram (segment)
segment_len = (numSpectrumsPerSpectrogram - 1) * numSamplesHopBetweenWin + win_len;

% No. samples that hop between each spectrogram (segment)
numSamplesHopBetweenSpectrograms = numSpectrumsHopBetweenSpectrograms * numSamplesHopBetweenWin;

% save in struct
win_info = struct(...
    'fs', fs, ...
    'win_len', win_len, ...
    'win', win, ...
    'overlap_coeff_win', overlap_coeff_win, ...
    'numSamplesOverlapBetweenWin', numSamplesOverlapBetweenWin, ...
    'numSamplesHopBetweenWin', numSamplesHopBetweenWin, ...
    'fft_len_coeff', fft_len_coeff, ...
    'fft_len', fft_len, ...
    ...
    'num_bands', num_bands, ...
    'numSpectrumsPerSpectrogram', numSpectrumsPerSpectrogram, ...
    'overlap_coeff_spectrograms', overlap_coeff_spectrograms, ...
    'numSpectrumsOverlapBetweenSpectrograms', numSpectrumsOverlapBetweenSpectrograms, ...
    'numSpectrumsHopBetweenSpectrograms', numSpectrumsHopBetweenSpectrograms, ...
    'segment_len', segment_len, ...
    'numSamplesHopBetweenSpectrograms', numSamplesHopBetweenSpectrograms ...
    );

end

